<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<bns:Component xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bns="http://api.platform.boomi.com/" folderFullPath="Boomi_PeterAntony/Solutions/Boomi DevOps Centre/Compare/ColesBDC/BDC13##Boomi DevOps Center 2021-01-13/BDC13Support Processes (DO NOT DEPLOY)" componentId="08d9e548-4da5-41f7-a730-5123888c9401" version="19" name="[script] Sleep" type="script.processing" createdDate="2021-04-19T09:36:35Z" createdBy="peterantony@boomi.com" modifiedDate="2023-02-09T06:18:28Z" modifiedBy="peterantony@boomi.com" deleted="false" currentVersion="true" folderName="BDC13Support Processes (DO NOT DEPLOY)" folderId="RjozOTYyNzgx" branchName="main" branchId="Qjo0NjgxMw">
  <bns:encryptedValues/>
  <bns:description/>
  <bns:object>
    <ProcessingScript xmlns="" language="groovy" useCache="true">
      <script>import java.util.Properties;
import java.io.InputStream;
import com.boomi.execution.ExecutionUtil;

logger = ExecutionUtil.getBaseLogger();

String pAmt = ExecutionUtil.getDynamicProcessProperty("dppSleep");

int waitFor;
int count;

if (pAmt == null) {
    waitFor = 1;
} else {
    waitFor = Integer.parseInt(pAmt);
}

Thread.sleep(waitFor * 1000);

count=0;
while(count&lt;1000) {
    logger.info(count.toString());
         count++;
}

for( int i = 0; i &lt; dataContext.getDataCount(); i++ ) {
    InputStream is = dataContext.getStream(i);
    Properties props = dataContext.getProperties(i);

    dataContext.storeStream(is, props);
}</script>
    </ProcessingScript>
  </bns:object>
</bns:Component>
