# This is a basic workflow to help you get started with Actions

name: build Package
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.gitignore'
      - '.github/workflows/**'

# Controls when the workflow will run
#on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  createPackage:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        #with:
        #  fetch-depth: 0
        #  path: INT-001

      - name: Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v37.5.2
        #with:
        #  path: INT-001
        
      # Runs a single command using the runners shell
      #- name: Run a one-line script
      #  run:  cat ${{ github.workspace }}/README.md

      # Runs a set of commands using the runners shell
      - name: Build Package
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            compId=$(grep '^componentId=' $file | cut -f2 -d'=')
            compType=$(grep '^componentType=' $file | cut -f2 -d'=')
            compVer=$(grep '^ver=' $file | cut -f2 -d'=')
            compNotes=$(grep '^notes=' $file | cut -f2 -d'=')
            echo compId is "$compId"
            echo compVer is "$compVer"
            echo compNotes is "$compNotes"

            export WD=${{github.workspace }}/boomicicd-cli/cli/scripts/
            chmod +x ${{ github.workspace }}/boomicicd-cli/cli/scripts/bin/common.sh
            ${{ github.workspace }}/boomicicd-cli/cli/scripts/bin/common.sh
            
            chmod +x ${{ github.workspace }}/boomicicd-cli/cli/scripts/bin/createSinglePackage.sh
            ${{ github.workspace }}/boomicicd-cli/cli/scripts/bin/createSinglePackage.sh componentId=$compId packageVersion=$compVer componentType=$compType notes="$compNotes"
          done

