name: Build and Deploy Package
on:
  workflow_dispatch:
    inputs:
      compId:
        description: 'Component Id'
        required: true
      compVer:
        description: 'Component version'
        required: true
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
        
  push:
    branches:
      - main
    paths:
      - 'InterfaceDefs/*'
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.ID2 }}
  AWS_DEFAULT_REGION: ap-southeast-2
  AWS_DEFAULT_OUTPUT: json
      
  ID: ${{ github.run_id }}-${{ github.run_attempt }}
  
jobs:
  preReqs:
    runs-on: [self-hosted, linux, X64]
    #runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v37.5.2

  #  - name: AWS Cli
  #    id: install-aws-cli
  #    uses: unfor19/install-aws-cli-action@v1
  #    with:
  #      version: 2                         # default
  #      verbose: false                     # default
  #      arch: amd64                        # allowed values: amd64, arm64
        
      - name: Install AWS CLI v2 and OS Packages
        run:  |
          #sudo apt-get install -y curl
          #not needed for GitHub hosted runners
          #curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "${GITHUB_WORKSPACE}/awscliv2.zip"
          #unzip -q /tmp/awscliv2.zip -d /tmp
          #unzip -q ${GITHUB_WORKSPACE}/awscliv2.zip -d ${GITHUB_WORKSPACE}/awscli
          #rm ${GITHUB_WORKSPACE}/awscliv2.zip
          #sudo /tmp/aws/install --update
          #rm -rf /tmp/aws/

          mkdir -p ${GITHUB_WORKSPACE}/tmp
          
          deployPackageHWM=5        
          echo "deploy=$deployPackageHWM" >> "$GITHUB_OUTPUT"
  
  deploytoDev:
    runs-on: [self-hosted, linux, X64]
    #runs-on: [ubuntu-latest]
    needs: createPackage
    #if: contains('1.Dev',needs.createPackage.outputs.runDeploy)
    if: needs.createPackage.outputs.runDeploy <= 5
    steps:
      - uses: actions/checkout@v3
        #with:
        #  fetch-depth: 0
        #  path: INT-001

      - name: Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v37.5.2
        with:
         envTargetName: "1.Dev"
        
      # Runs a set of commands using the runners shell
      - name: Deploy Package
        run: |
          sudo apt-get install -y libxml2-utils jq
          
          BoomiAccount=${{ vars.BOOMI_ACCOUNT }}
          BoomiAccount=${{ vars.BOOMI_ACCOUNT }}
          BoomiUsername=${{ vars.BOOMI_USERNAME }}
          API=${{ secrets.API }}
          RepoURL=${{ github.server_url }}
          RepoName=${{ github.repository }}
          RepoPath=${RepoURL}/${RepoName}
          GITUsername=${{ github.repository_owner }}
          GITUseremail=${{ vars.EMAIL }}
          CodeFolderXML=${{ vars.CODEFOLDER }}
          POSTMAN=${{ secrets.POSTMAN }}

          _bot=${{ secrets.BOT }}

          find ${GITHUB_WORKSPACE} -name *.sh -exec chmod 700 {} \;
          chmod +x "${GITHUB_WORKSPACE}/cli/scripts/bin/propertiesCICD.sh"
          chmod +x ${GITHUB_WORKSPACE}/cli/scripts/bin/common.sh
          chmod +x "${GITHUB_WORKSPACE}/cli/scripts/initcrPackage.sh"

          source "${GITHUB_WORKSPACE}/cli/scripts/bin/propertiesCICD.sh" $BoomiAccount $BoomiUsername $API $RepoPath $GITUsername $GITUseremail $CodeFolderXML
          source ${GITHUB_WORKSPACE}/cli/scripts/bin/common.sh
          
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            devEnvUpd=$(grep '^devEnvUpd=' $file | cut -f2 -d'=')

            if [[ $devEnvUpd == 1 ]]
            then
              #_devEnvId=$(grep '^devEnvId=' $file | cut -f2 -d'=')
              _devEnvId=${{ vars.envDevId }}
              _devEnvCompType=$(grep '^devEnvCompType=' $file | cut -f2 -d'=')
              _devEnvConnId=$(grep '^devEnvConnId=' $file | cut -f2 -d'=')
              _devEnvConnFieldId=$(grep '^devEnvConnFieldId=' $file | cut -f2 -d'=')
              _devEnvSSMId=$(grep '^devEnvSSMId=' $file | cut -f2 -d'=')

              _pass=$(aws secretsmanager get-secret-value --secret-id $_devEnvSSMId | jq -r ".SecretString" | awk -F ":" '{ print $2 }' | sed "s/^\"//g ; s/\"}//g")
            fi
          
            compId=$(grep '^componentId=' $file | cut -f2 -d'=')
            compType=$(grep '^componentType=' $file | cut -f2 -d'=')
            compVer=$(grep '^ver=' $file | cut -f2 -d'=')
            envName=$(grep '^deploy=' $file | cut -f2 -d'=')
            listenerStatus=$(grep '^listenerStatus=' $file | cut -f2 -d'=')
            compNotes=$(grep '^deployNotes=' $file | cut -f2 -d'=')

            compCount=1
            compCount=$(echo "$compId" | awk -F "," '{print NF-1}')
            compCount=$((compCount + 1))
            
            compCount=$(echo "$compId" | awk -F "," '{print NF-1}')
            compCount=$((compCount + 1))
            echo number of Components: $compCount

            export WD=${GITHUB_WORKSPACE}/cli/scripts/
            export WORKSPACE=${GITHUB_WORKSPACE}/cli/scripts/
            export GITHUB_WORKSPACE

            if [[ $devEnvUpd == 1 ]]
            then
               source "${GITHUB_WORKSPACE}/cli/scripts/bin/updateExtensions.sh" environmentId="$_devEnvId" componentId="$_devEnvConnId" componentType="$_devEnvCompType" fieldVal="$_pass"
            fi

            envName=${{ vars.envDev }}
            for (( _compIdx=1 ; _compIdx <= $compCount ; _compIdx++ )) ; do
              _compId=$(echo $compId | cut -f $_compIdx -d",")
              "${GITHUB_WORKSPACE}/cli/scripts/initdeployPackage.sh" componentId=$_compId packageVersion=$compVer componentType=$compType notes="$compNotes" env=$envName listenerStatus=$listenerStatus
              
              #_msg="$envName: Component '$_compId ' (ver: '$compVer' ) deployed"
              #curl -d text="$_msg" -d "channel=deployments" -H "Authorization: Bearer $_bot" -X POST https://slack.com/api/chat.postMessage
            done

            echo $compId~$envTargetName >> /tmp/boomiCICD.lst
          done
